(set-logic QF_BV)
(declare-fun var1 () (_ BitVec 1))
(declare-fun var2 () (_ BitVec 1))
(declare-fun var3 () (_ BitVec 1))
(declare-fun var4 () (_ BitVec 1))
(declare-fun var5 () (_ BitVec 1))
(declare-fun var6 () (_ BitVec 1))
(declare-fun var7 () (_ BitVec 1))
(declare-fun var8 () (_ BitVec 1))
(declare-fun var9 () (_ BitVec 1))
(declare-fun var10 () (_ BitVec 1))
(declare-fun var11 () (_ BitVec 1))
(declare-fun var12 () (_ BitVec 1))
(declare-fun var13 () (_ BitVec 1))
(declare-fun var14 () (_ BitVec 1))
(declare-fun var15 () (_ BitVec 1))
(declare-fun var16 () (_ BitVec 1))
(declare-fun var17 () (_ BitVec 1))
(declare-fun var18 () (_ BitVec 1))
(declare-fun var19 () (_ BitVec 1))
(declare-fun var20 () (_ BitVec 1))
(declare-fun var21 () (_ BitVec 1))
(declare-fun var22 () (_ BitVec 1))
(declare-fun var23 () (_ BitVec 1))
(declare-fun var24 () (_ BitVec 1))
(declare-fun var25 () (_ BitVec 1))
(declare-fun var26 () (_ BitVec 1))
(declare-fun var27 () (_ BitVec 1))
(set-info :controlled var7)
(define-fun x4 () (_ BitVec 4) (concat var1 var2 var26 var27))
(define-fun node4 () Bool (bvult x4 (_ bv1 4)))
(define-fun x0 () (_ BitVec 22) (concat var3 var4 var5 var6 var8 var9 var10 var11 var12 var13 var14 var15 var16 var17 var18 var19 var20 var21 var22 var23 var24 var25))
(define-fun node0 () Bool (bvult x0 (_ bv69 22)))
(define-fun x2 () (_ BitVec 20) (concat var3 var4 var8 var9 var10 var11 var12 var13 var14 var15 var16 var17 var18 var19 var20 var21 var22 var23 var24 var25))
(define-fun node2 () Bool (bvult x2 (_ bv13 20)))
(define-fun node3 () Bool (ite (= var7 (_ bv1 1)) node0 node2))
(define-fun node1 () Bool (and node3 node4))
(assert node1)
